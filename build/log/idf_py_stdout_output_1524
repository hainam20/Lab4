[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ble_app.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_mqtt.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable mini-project.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[8/9] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0xb8070 bytes. Smallest app partition is 0x177000 bytes. 0xbef90 bytes (51%) free.
[8/9] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c8fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.9 seconds (effective 248.0 kbit/s)...
Hash of data verified.
Compressed 753776 bytes to 445649...
Writing at 0x00010000... (3 %)
Writing at 0x0001dd6b... (7 %)
Writing at 0x0002a289... (10 %)
Writing at 0x00033559... (14 %)
Writing at 0x00039042... (17 %)
Writing at 0x0003ebff... (21 %)
Writing at 0x0004454e... (25 %)
Writing at 0x00049fc6... (28 %)
Writing at 0x0004f838... (32 %)
Writing at 0x000564da... (35 %)
Writing at 0x0005c08a... (39 %)
Writing at 0x00061f48... (42 %)
Writing at 0x00067ead... (46 %)
Writing at 0x0006dc60... (50 %)
Writing at 0x00073954... (53 %)
Writing at 0x00079a62... (57 %)
Writing at 0x0007f70d... (60 %)
Writing at 0x00085a80... (64 %)
Writing at 0x0008b89a... (67 %)
Writing at 0x000912ab... (71 %)
Writing at 0x00096b15... (75 %)
Writing at 0x0009fed3... (78 %)
Writing at 0x000a68a5... (82 %)
Writing at 0x000af9b7... (85 %)
Writing at 0x000b5987... (89 %)
Writing at 0x000bb4cc... (92 %)
Writing at 0x000c0f01... (96 %)
Writing at 0x000c6b31... (100 %)
Wrote 753776 bytes (445649 compressed) at 0x00010000 in 10.5 seconds (effective 575.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 314.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
