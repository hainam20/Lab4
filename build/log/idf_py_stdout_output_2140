[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6720 bytes. 0x8e0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable mini-project.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[7/8] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0x85e00 bytes. Smallest app partition is 0x100000 bytes. 0x7a200 bytes (48%) free.
[7/8] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00095fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26400 bytes to 16469...
Writing at 0x00001000... (50 %)
Writing at 0x000076ab... (100 %)
Wrote 26400 bytes (16469 compressed) at 0x00001000 in 0.9 seconds (effective 246.4 kbit/s)...
Hash of data verified.
Compressed 548352 bytes to 336988...
Writing at 0x00010000... (4 %)
Writing at 0x0001b23d... (9 %)
Writing at 0x0002141b... (14 %)
Writing at 0x00028b2c... (19 %)
Writing at 0x0003008c... (23 %)
Writing at 0x00035b28... (28 %)
Writing at 0x0003bdd3... (33 %)
Writing at 0x000417d3... (38 %)
Writing at 0x0004754b... (42 %)
Writing at 0x0004d33c... (47 %)
Writing at 0x00053680... (52 %)
Writing at 0x0005955d... (57 %)
Writing at 0x0005ef55... (61 %)
Writing at 0x000653af... (66 %)
Writing at 0x0006ae81... (71 %)
Writing at 0x0007073a... (76 %)
Writing at 0x0007920d... (80 %)
Writing at 0x000813c6... (85 %)
Writing at 0x00086c14... (90 %)
Writing at 0x0008cb23... (95 %)
Writing at 0x0009266a... (100 %)
Wrote 548352 bytes (336988 compressed) at 0x00010000 in 7.8 seconds (effective 562.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 312.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
