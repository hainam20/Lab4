[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6720 bytes. 0x8e0 bytes (8%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_mqtt.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable mini-project.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[8/9] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0xb4060 bytes. Smallest app partition is 0x177000 bytes. 0xc2fa0 bytes (52%) free.
[8/9] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c4fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26400 bytes to 16469...
Writing at 0x00001000... (50 %)
Writing at 0x000076ac... (100 %)
Wrote 26400 bytes (16469 compressed) at 0x00001000 in 0.9 seconds (effective 247.1 kbit/s)...
Hash of data verified.
Compressed 737376 bytes to 471585...
Writing at 0x00010000... (3 %)
Writing at 0x0001b4f0... (6 %)
Writing at 0x000206fe... (10 %)
Writing at 0x000283b1... (13 %)
Writing at 0x00031f43... (17 %)
Writing at 0x000379c4... (20 %)
Writing at 0x0003d2a2... (24 %)
Writing at 0x00042f7c... (27 %)
Writing at 0x0004945f... (31 %)
Writing at 0x0004ef25... (34 %)
Writing at 0x00054260... (37 %)
Writing at 0x00059645... (41 %)
Writing at 0x0005e98c... (44 %)
Writing at 0x00063ffa... (48 %)
Writing at 0x000695d6... (51 %)
Writing at 0x0006ecf8... (55 %)
Writing at 0x00074aa7... (58 %)
Writing at 0x0007a000... (62 %)
Writing at 0x0007f797... (65 %)
Writing at 0x0008527c... (68 %)
Writing at 0x0008a9de... (72 %)
Writing at 0x0009054d... (75 %)
Writing at 0x00095f9c... (79 %)
Writing at 0x0009eb47... (82 %)
Writing at 0x000a6a38... (86 %)
Writing at 0x000aef5e... (89 %)
Writing at 0x000b4973... (93 %)
Writing at 0x000ba3d2... (96 %)
Writing at 0x000bf9bd... (100 %)
Wrote 737376 bytes (471585 compressed) at 0x00010000 in 11.0 seconds (effective 538.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 315.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
