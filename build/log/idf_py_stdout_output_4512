[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ble_app.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_mqtt.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable mini-project.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[8/9] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0xb89c0 bytes. Smallest app partition is 0x177000 bytes. 0xbe640 bytes (51%) free.
[8/9] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c8fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.9 seconds (effective 246.6 kbit/s)...
Hash of data verified.
Compressed 756160 bytes to 446940...
Writing at 0x00010000... (3 %)
Writing at 0x0001e0c8... (7 %)
Writing at 0x0002a626... (10 %)
Writing at 0x0003364a... (14 %)
Writing at 0x000390b2... (17 %)
Writing at 0x0003ece7... (21 %)
Writing at 0x00044633... (25 %)
Writing at 0x0004a09a... (28 %)
Writing at 0x0004f9fc... (32 %)
Writing at 0x000565e3... (35 %)
Writing at 0x0005c0de... (39 %)
Writing at 0x0006211b... (42 %)
Writing at 0x00068068... (46 %)
Writing at 0x0006de0d... (50 %)
Writing at 0x00073ac8... (53 %)
Writing at 0x00079c06... (57 %)
Writing at 0x0007f8e9... (60 %)
Writing at 0x00085b5a... (64 %)
Writing at 0x0008bad8... (67 %)
Writing at 0x000914cc... (71 %)
Writing at 0x00096c89... (75 %)
Writing at 0x000a0206... (78 %)
Writing at 0x000a6730... (82 %)
Writing at 0x000ade84... (85 %)
Writing at 0x000b5c1a... (89 %)
Writing at 0x000bb611... (92 %)
Writing at 0x000c1145... (96 %)
Writing at 0x000c6c64... (100 %)
Wrote 756160 bytes (446940 compressed) at 0x00010000 in 10.5 seconds (effective 574.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 318.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
