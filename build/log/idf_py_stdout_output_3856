[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ble_app.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_mqtt.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable mini-project.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[8/9] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0xb89e0 bytes. Smallest app partition is 0x177000 bytes. 0xbe620 bytes (51%) free.
[8/9] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c8fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.9 seconds (effective 246.8 kbit/s)...
Hash of data verified.
Compressed 756192 bytes to 446947...
Writing at 0x00010000... (3 %)
Writing at 0x0001e03e... (7 %)
Writing at 0x0002a5dd... (10 %)
Writing at 0x0003362a... (14 %)
Writing at 0x000390b2... (17 %)
Writing at 0x0003ece1... (21 %)
Writing at 0x00044634... (25 %)
Writing at 0x0004a09b... (28 %)
Writing at 0x0004fa01... (32 %)
Writing at 0x000565d8... (35 %)
Writing at 0x0005c0d4... (39 %)
Writing at 0x00062114... (42 %)
Writing at 0x00068057... (46 %)
Writing at 0x0006ddf6... (50 %)
Writing at 0x00073ac2... (53 %)
Writing at 0x00079bfc... (57 %)
Writing at 0x0007f8e0... (60 %)
Writing at 0x00085b56... (64 %)
Writing at 0x0008baca... (67 %)
Writing at 0x000914c1... (71 %)
Writing at 0x00096c7c... (75 %)
Writing at 0x000a01f8... (78 %)
Writing at 0x000a6720... (82 %)
Writing at 0x000ade73... (85 %)
Writing at 0x000b5c35... (89 %)
Writing at 0x000bb622... (92 %)
Writing at 0x000c115c... (96 %)
Writing at 0x000c6c84... (100 %)
Wrote 756192 bytes (446947 compressed) at 0x00010000 in 10.6 seconds (effective 572.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 316.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
