[1/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/VScode/Learn/esp-idf/mini-project/mini-project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ble_app.c.obj
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_mqtt.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable mini-project.elf
[8/10] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin
[9/10] cmd.exe /C "cd /D D:\VScode\Learn\esp-idf\mini-project\mini-project\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/VScode/Learn/esp-idf/mini-project/mini-project/build/partition_table/partition-table.bin D:/VScode/Learn/esp-idf/mini-project/mini-project/build/mini-project.bin"
mini-project.bin binary size 0xb8090 bytes. Smallest app partition is 0x177000 bytes. 0xbef70 bytes (51%) free.
[9/10] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\esp\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=c:/esp/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/VScode/Learn/esp-idf/mini-project/mini-project/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mini-project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b8:d6:1a:5b:7c:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c8fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.9 seconds (effective 247.5 kbit/s)...
Hash of data verified.
Compressed 753808 bytes to 445653...
Writing at 0x00010000... (3 %)
Writing at 0x0001dd63... (7 %)
Writing at 0x0002a258... (10 %)
Writing at 0x0003355d... (14 %)
Writing at 0x00039026... (17 %)
Writing at 0x0003ebf8... (21 %)
Writing at 0x00044556... (25 %)
Writing at 0x00049fc5... (28 %)
Writing at 0x0004f839... (32 %)
Writing at 0x000564d5... (35 %)
Writing at 0x0005c085... (39 %)
Writing at 0x00061f49... (42 %)
Writing at 0x00067ea9... (46 %)
Writing at 0x0006dc65... (50 %)
Writing at 0x00073964... (53 %)
Writing at 0x00079a6a... (57 %)
Writing at 0x0007f720... (60 %)
Writing at 0x00085a93... (64 %)
Writing at 0x0008b8ab... (67 %)
Writing at 0x000912bb... (71 %)
Writing at 0x00096b24... (75 %)
Writing at 0x0009fee1... (78 %)
Writing at 0x000a68b4... (82 %)
Writing at 0x000af9d0... (85 %)
Writing at 0x000b599e... (89 %)
Writing at 0x000bb4df... (92 %)
Writing at 0x000c0f18... (96 %)
Writing at 0x000c6b49... (100 %)
Wrote 753808 bytes (445653 compressed) at 0x00010000 in 10.5 seconds (effective 573.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 322.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
